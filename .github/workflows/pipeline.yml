name: Java CI with Maven
on:
  push:
    branches: [ "dev" ]

jobs:
  versioning:
    runs-on: ubuntu-24.04
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch last tags and set version
      id: version
      run: |
        git fetch --tags
        VERSION=$(git tag | sort -V | tail -n 1)
        echo "My Latest version: $VERSION"
        
        VERSION_PARTS=(${VERSION//./ })
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        
        NEW_PATCH_NUM=$((PATCH + 1))
        NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH_NUM}"
        mvn versions:set -DnewVersion=$NEW_VERSION
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
        echo "::set-output name=new_version::$NEW_VERSION"
        echo "Final new_version=$NEW_VERSION"

    - name: Push new tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        NEW_TAG=${{ env.new_version }}
        git tag $NEW_TAG
        git push origin $NEW_TAG

  build:
    runs-on: ubuntu-24.04
    needs: versioning
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3

#      - name: Docker Build and Run
#        run: |
#          docker build -t my_app:${{ needs.versioning.outputs.new_version }} .
#          docker run my_app:${{ needs.versioning.outputs.new_version }}


